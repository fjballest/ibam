/******* CODE GENERATED BY mkgmm **************/


# define GMM_tsk_L  0

# define GMM_fun_L  1

# define GMM_num_L  2
# define GMM_NUM_LIST 3

extern gmm_list_tp gmm_tsk_l ; /* list for tsk */

extern gmm_list_tp gmm_fun_l ; /* list for fun */

extern gmm_list_tp gmm_num_l ; /* list for num */

void gmm_init( /* tsk_size, fun_size, num_size*/);
/* ------------------------------ 
 * Use        : lists 
 * Global     : list structs
 * Parameters : the sizes for each list.
 * Comments   : Initializes the lists.
 *
 * ------------------------------ */
/*
 * ********** MACROS FOR tsk NODES **********
 */
/*
 char *tsk_Malloc(size_t tsk_size);
 * ------------------------------
 * MACRO !!
 * Returns    : Pointer to an allocated tsk node.
 * Global     : gmm_tsk_l.
 * Parameters : size of a tsk node.
 * Comments   : allocates a node of tsk type.
 *
 * ---------------------------- */

/*
 int tsk_is_full();
 * ------------------------------
 * MACRO !!
 * Returns    : Non zero if there is no room for  tsk node.
 * Global     : gmm_tsk_l.
 *
 * ---------------------------- */

/*
 * ********** MACROS FOR fun NODES **********
 */
/*
 char *fun_Malloc(size_t fun_size);
 * ------------------------------
 * MACRO !!
 * Returns    : Pointer to an allocated fun node.
 * Global     : gmm_fun_l.
 * Parameters : size of a fun node.
 * Comments   : allocates a node of fun type.
 *
 * ---------------------------- */

/*
 int fun_is_full();
 * ------------------------------
 * MACRO !!
 * Returns    : Non zero if there is no room for  fun node.
 * Global     : gmm_fun_l.
 *
 * ---------------------------- */

/*
 * ********** MACROS FOR num NODES **********
 */
/*
 char *num_Malloc(size_t num_size);
 * ------------------------------
 * MACRO !!
 * Returns    : Pointer to an allocated num node.
 * Global     : gmm_num_l.
 * Parameters : size of a num node.
 * Comments   : allocates a node of num type.
 *
 * ---------------------------- */

/*
 int num_is_full();
 * ------------------------------
 * MACRO !!
 * Returns    : Non zero if there is no room for  num node.
 * Global     : gmm_num_l.
 *
 * ---------------------------- */

char *gmm_tsk_malloc();
/* ------------------------------
 * Returns    : Pointer to allocated tsk node; NULL if error.
 * Global     : gmm_tsk_l.
 * Comments   : Get a new page and allocates a tsk node
 *
 * ------------------------------ */

#ifdef DEBUG
char *tsk_malloc();
/* ------------------------------
 * Returns    : Pointer to allocated tsk node; NULL if error.
 * Global     : gmm_tsk_l.
 * Comments   : Get allocates a tsk node. It's only executed when in DEBUG mode.
 *              Otherwise the equivalent macro is executed.
 *
 * ------------------------------ */
#endif

char *gmm_fun_malloc();
/* ------------------------------
 * Returns    : Pointer to allocated fun node; NULL if error.
 * Global     : gmm_fun_l.
 * Comments   : Get a new page and allocates a fun node
 *
 * ------------------------------ */

#ifdef DEBUG
char *fun_malloc();
/* ------------------------------
 * Returns    : Pointer to allocated fun node; NULL if error.
 * Global     : gmm_fun_l.
 * Comments   : Get allocates a fun node. It's only executed when in DEBUG mode.
 *              Otherwise the equivalent macro is executed.
 *
 * ------------------------------ */
#endif

char *gmm_num_malloc();
/* ------------------------------
 * Returns    : Pointer to allocated num node; NULL if error.
 * Global     : gmm_num_l.
 * Comments   : Get a new page and allocates a num node
 *
 * ------------------------------ */

#ifdef DEBUG
char *num_malloc();
/* ------------------------------
 * Returns    : Pointer to allocated num node; NULL if error.
 * Global     : gmm_num_l.
 * Comments   : Get allocates a num node. It's only executed when in DEBUG mode.
 *              Otherwise the equivalent macro is executed.
 *
 * ------------------------------ */
#endif

void gmm_clear();
/* ------------------------------
 * Global     : All page lists; pool.
 * Comments   : Moves all memory lists to the pool list.
 *
 * ------------------------------ */

/******* END OF CODE GENERATED BY mkgmm *******/

